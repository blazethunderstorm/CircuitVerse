name: "Ruby on Rails CI"

on:
  [push, pull_request, workflow_dispatch]

jobs:
  test:
    name: Run RSpec Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
      redis:
        image: redis:alpine
        ports: ["6379:6379"]
        options: --entrypoint redis-server

    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev build-essential g++

      - name: Yarn install
        run: yarn install

      - name: Install Playwright
        run: |
          export PLAYWRIGHT_CLI_VERSION=$(bundle exec ruby -e 'require "playwright"; puts Playwright::COMPATIBLE_PLAYWRIGHT_VERSION.strip')
          yarn add -D "playwright@$PLAYWRIGHT_CLI_VERSION"
          npx playwright install --with-deps

      - name: Setup environment
        run: cp .env.example .env

      - name: Prepare DB
        run: |
          bin/rails db:schema:load
          bin/rails data:migrate

      - name: Build assets
        run: yarn run build

      - name: Setup JWT keys
        run: |
          openssl genrsa -out config/private.pem 2048
          openssl rsa -in config/private.pem -outform PEM -pubout -out config/public.pem

      - name: Run RSpec tests with coverage
        run: bundle exec rspec

      - name: Upload failed test screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/capybara
          if-no-files-found: ignore

  qlty-upload:
    name: Upload to Qlty
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload Qlty coverage
        uses: qlty-io/gh-action@v1
        with:
          token: ${{ secrets.QLTY_TOKEN }}

  lint:
    name: Ruby Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Audit for vulnerabilities
        run: bundle exec bundler-audit --update

      - name: Run Rubocop
        run: bundle exec rubocop --parallel
